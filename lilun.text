接口基础理论
1你都接触过那些协议
http  https  ftp  webserives  tcp  ip  udp
2http与https的区别
  https协议是需要CA证书的,一般都是要收费的,
  http是超文本传输协议,信息是明文传输,https则是具有安全性的ssl/tls加密传输协议
  Http和https的连接方式不同,端口也不一样http是8080端口,https是443端口
  http的连接很简单,是无状态的;https协议是由ssl/tls+http协议构建的是可以进行加密传输和身份认证的网络协议,比http协议安全

3tcp的三次握手
  首先是客户端发送一个syn的包到服务器,然后服务器会返回syn+ack得的包到客户端,
  这时客户端处于接收状态,之后客户端会在发送一个ack包到服务器,服务器接收后,就连接成功了,就完成了三次握手


Syn同源序列编号   ack确认包

Fin断开连接指令
四次挥手(断开连接)
客户端发送 fin 到服务器  服务器返回ack到客户端 服务再发送一个fin 到客户端
客户端把 ack 发送给服务器

4你都接触过那些请求方式
Get请求是获取资源的
Post是上传数据的
Put是更新数据的
Delete是删除数据
Head获取request-URL所有的资源响应头的消息报头
Connect代理传输
Options 查询可执行的方法
5get与post的区别,post与put的区别
  1Get是明文请求,在URL后面拼接key和value值数据会显示出来,不安全;
  post的请求信息在表单里,是隐藏起来的,相对于get来说要安全一点.
  2get有字数限制,post没有字数限制
  3get是获取数据,post是发送数据
Post和put的区别在于是否等幂put是等幂的,post是不等幂的,
Post和put都可以修改数据,post是上传新数据原数据失效,put是在原数据修改
post是上传数据,put是更新数据
6接口的请求格式有哪些
From  data x-www-form__unlencode  json  xml
7什么是前端什么是后端,怎么判断前后端问题
  前端是肉眼可见的页面(html+css),后端是看不见的业务逻辑,功能,方法,看见的是前端看不见的是后端,
一般前端的问题通常是功能,界面和兼容性有关,后端一般与逻辑,性能和安全性有关
1. 通过工作经验（页面、状态码）
2. 查看数据库确认数据的正确性
3. 通过抓包工具分析:前端:请求地址,请求方法,请求格式,请求参数  后端:响应信息
4. 查看报错日志，通过日志分析问题点
查看日志的方法:Less -f 服务名 catalina.日期（2022-02-08）.out  (/expection  /erorr
或者?expection ?erorr  N,n 上下查找)
9cookie和session以及token的作用
 Cookie是免登录的,session是访问
Token一般用于公司比较重要的接口效验,用于与第三方公司调用和使用,token是由UID(用户唯一身份识别),时间戳,签名(sign)加密组成
10cookie和session的区别
  1cookie和session都是保存私密信息的
  2Cookie是服务器产生的,保存在客户端的浏览器上(一般设置保存2星期,时间较长),session是客户端产生的保存在服务器(默认保存半小时,时间较短)
  3安全性来说session比cookie更安全(cookie保存在本地可能会被病毒盗取)
  4session保存在服务器,当访问增多是,会占用服务器性能,为了让服务器运行顺畅,应当选择coolie, cookie保存在客户端一般限制在3k左右

11为什么要做接口的测试
  ①、可以发现很多在页面上操作发现不了的bug
②、检查系统的异常处理能力（发送错误的数据会不会导致什么影响）
③、检查系统的安全性、稳定性（模块与模块之间传输数据是否安全、稳定）
④、接口测好了，后端不用变（代码到哪都能用）
12接口测试什么时候介入
1如果只做接口,就在后端开发把接口写完之后就开始接口测试
2正常的话就是在做完功能测试之后再跑接口
13接口的测试流程
   在我们公司，首先进行一个需求评审，评审api文档，去明确接口说明，url，请求方式，格式，参数以及响应结果，如果有遗漏的地方及时让产品经理补充，然后根据api文档去设计相关场景，编写正向和反向用例，准备一些测试需要的数据，用接口工具去执行，有问题的有禅道提交给后端开发，开发修改完成之后，进行复测，没有就关闭，有问题的话重新激活，用例执行完成，bug全部关闭，就输出一个测试报告（接口名称，用例数，bug数，修复率，有没有遗留的bug。。。）
14常见的http状态码
  100是正在处理中
200成功,
201更新数据成功
202请求在后台排队
204删除成功
300重定向
302重定向到别的地方了
400客户端错误
401表示用户没有权限
403没有权限访问页面
404没有这个页面
406用户请求无法获取
410请求资源被删除
500服务器错误
503当前服务器无法处理请求,过会恢复
504服务器端超时没有返回结果
505服务器异常
15给你一个api文档,怎么设计测试用例

首先分析一下api的文档的一些要素，对请求地址的正确与错误，对请求方式的正确与错误，对请求格式的正确与错误，对请求参数（参数名正确与错误，参数值正确与错误，必填字段不为空与为空，参数类型的正确与错误）去设计正向与反向用例，不同的场景会返回不一样的结果
16接口测试用例包含那些要素
ID 模块 用例名称 接口名称 前置条件 请求URL 请求类型 请求头 请求数据类型 请求参数 预期结果 测试结果
17前后端bug都有哪些特点
   前端bug一般与界面,布局,兼容性和交互相关
   后端bug一般与性能,数据,安全性,复杂的业务逻辑相关
18请求头包含那些
  Accept(ai k se pu t) 可接收的数据类型
Accept-Encoding(ying ko ting) 接收的编码格式
Accept-language(lan guai chi) 可接收的语言
Cache-Control(ka chi , kang chuo)  缓存机制
Connection(ke lai ke shen) 连接方式
Content-Length(ke lai ten t , lai ge c) 字节长度
Content-Type 请求格式
  Host 主机地址
  User-agent 使用的浏览器
19响应头包含那些
  Cache-control缓存机制
  Connection 连接方式
  Content-type 响应格式
  Date 系统当前时间
  Expires 过期时间
  Location 服务器位置
  Server 服务器名称
20一个完整的请求需要经历那些过程(包含那些时间片段)
  Blocked (阻塞)-->DNS Lookup(域名解析)-->connect(连接)-->send(发送)-->Wait(等待)-->Receive(接受)-->Cache Read(读缓存时间)
   Blocked(阻塞):阻塞时间包括:预处理时间和网络排队时间,原因是下载页面的图片
   DNS Lookup(域名解释)主要是将域名转换为IP地址,因为URL不能直接访问域名
   Connet(连接)是指与web服务器建立起tcp连接花费的时间,一个安全的,https连接应该包含ssl握手的过程(ssl(secure sockets layer安全套数字协议),及其继任者传输层安全transport layer security,tls)是为网络通信提供安全及数据完整的一种安全协议,tls与ssl在传输层与应用层之间对网络践行加密),让系统处于一种保持连接的状态,可以节约复制创建tcp的连接时间
   Send(发送)发送时间是指从客户端发送http请求到服务器的时间,数据的大小会影响发送时间
   Wait(等待)等待时间是指服务器形影请求的时间,这个时间包括网络延迟和服务器处理时间
   Receive(接收)是指服务器返回客户端花费的时间,受到网络的影响
   Cache read(读cache存储)读取缓存时间指读取浏览器缓存内容时间
21日志中包含那些信息
1.系统时间
2.服务名
3.请求报文（请求头，请求参数）
4.响应报文（响应头，响应参数）
5.异常和错误
6.SQL语句

Fiddle
1fiddler的工作原理
代理服务器
2fiddler怎么快速找到我想要的接口
  1.抓包之前清空所有数据
2.在fiddler里面设置过滤
3.通过接口的英文名判断
4.通过接口里面的参数判断
3fiddler怎么过滤
  要设置过滤可以在filters标签下设置:点击filters进、入勾选UseFilters在hosts下方的第二个下拉框，选择ShowOnly the following Hosts(fou wie ying)下方输入框输入要抓包的主机地址或域名，点击Actions选择Run Filterset Now运行，如果要取消过滤去勾掉UseFilters就可以了

4fiddler怎么抓取https请求
   Fiddler要抓去https包,通过工具进入选项找到https选择安装https证书,如果安装过不会提示下载,没有安装过会提示下载下载后进行安装,安装后重启fiddler就可以了
5fiddler怎么设置弱网(怎么做弱网测试),做弱网测试的目的
在fiddler菜单中点击rules(规则)中的performance(性能设置)选择simulate modem speeds(模拟慢速网络)模拟2G3G网络的话可以在fiddler菜单中点击rules(规则)中的customize rules(自定义规则)，在ctrl+f搜索m_Simulatemodem中根据2G(500/400)3G(100/100)网络的速度进行设置

6怎么抓取手机端的包
   要保证手机和fiddle在同一个网络下
首先在fiddler里的工具，选项找到connections，勾选Allow remote computers to connect
（允许远程计算机连接）点击ok
在手机端自带的浏览器输入 http//主机IP:fiddler端口号  进入下载证书
ios先下载-安装-信任（通用-关于本机-证书信任设置-高亮就可以了）
安卓下载完成就可以了
之后在wifi设置中设置代理为手动代理输入主机IP 输入fiddle端口号,点击完成就可以了
7fidd怎么做并发
  设置并发可以用shift+r或shift+u进行并发的设置
8fiddler怎么设置断点,断点的作用
  设置断点是为了对数据进行修改,设置断点可以用快捷键F11请求前断点，修改请求参数，验证后端有没有做校验,Alt+F11响应后断点，修改响应参数，验证前端有没有做校验
  也可以在会话框下方点击进行设置,点击一下是请求前,两下是响应后,三下是取消
  也可以在规则菜单中自动断点 进行断点拦截设置

9fiddler抓不到包有什么原因
1杀毒软件,防火墙没有关闭,
2过滤没有关闭,
3抓取https的时候证书损坏或没安装
4网络原因
5抓手机端时,手机和电脑没在同一个局域网,或手机端没安装证书
6自动回复器没关闭

10.fiddler怎么做接口测试
先抓包---进入回话详情---点击数据---复制请求头数据---粘贴到请求编辑的数据里面--修改参数或者删除参数,点击Execute ,然后再返回到会话详情的数据中,查看响应的结果是否和我们修改后的预期结果一致的,这个类似于打断点。工作中看个人习惯使用
11.mock的作用及fiddler怎么mock数据
Mock数据可以模拟后端返回,看前端有无变化
先抓到要moke的接口,点击自动转发,勾选启用规则,添加要mock的接口,在规则编辑器选择创建新的响应,点击保存,弹出自动响应编辑,选择数据,在响应体内输入响应数据,点击保存
先抓到要moke的接口,点击自动转发,勾选启用规则,添加要mock的接口,在规则编辑器第二个下拉框选择,选择响应文件,选中文件点击确认会返回fiddler,点击保存就可以了(响应文件要提前写好)

Postman
1postman怎么做接口
 首先是根据api文档(没有api文档可以通过抓包),在postman选择请求类型,输入URL,
如果是get请求在params里输入key和value值没有提示在可以不填参数值,点击send执行,就可以了
如果是post请求,在bosy里选择请求格式,根据格式要求输入请求参数,如果是修改信息的话就需要在headers里输入token和token值点击执行,登录则不用,如果是put请求的话就必须在headers里输入token和token值,点击send就可以可以了
如果是delete请求,在URL后跟删除的数据id,headers里输入token和token值,点击send就可以了

2postman怎么导入和导出
  Postman可以接口集后的。。。点击,选择Export,选择导出版本,选择存储的位置,还可以通过点击设置图标,点击设置找到data,点击download(下载)选择保存位置就可以导出一个json的文件
 导入可以点击import,将json文件拖入就可以了,也可以通过通过点击设置图标,点击设置找到data,点击选择文件,选择json格式的文件确定就可以导入了


3postman怎么code代码
   再请求写好后执行,点击save,选择code的代码格式就会出现相应格式的代码了

4断言的作用，postman怎么设置断言
   断言的作用
判断预期结果和实际结果是否一致
在做接口时，点击tests，选择code is 200可以进行对状态码的断言，选择json value check可以对响应数据进行断言

网络架构
网络协议有哪几层，每个层级的作用？
物理层————透明地传输比特流，为数据端设备提供传送数据通路、传输数据          数据单元:比特流  常见的设备:电缆
数据链路层———提供截至访问和链路管理
数据单元:帧   常见设备:交换机,网桥
网络层————数据传输线路选择，IP地址及路由选择
数据单元:ip数据报或分组  常见设备:路由器
传输层————建立、维护和管理端到端的链接，控制数据传输的方式
数据单元:段或报文
会话层————建立、维护和管理会话
表示层————对数据格式转化,数据加密
应用层————为应用数据提供服务


http协议位于那一层？
应用层
Tcp与udp位于那一层及区别？
传输层
  1,udp比tcp安全性要高,udp的漏洞比较少,不容易被一些不法分子利用
  2,udp的传播速度比tcp快,tcp传输要先创建连接,建立连接比较耗时,而且还要确认一些东西,而udp无连接传输数据
  3udp可以一对多或多对多连接,tcp只能一对一连接

Tcp协议基于字节流传输，主要传输字节
Udp协议传输用户数据，进行加密传输

接口api文档不全面的话，你会怎么办?
如果api文档不全面的话,我会找项目经理或者后端开发要最新的接口文档,如果后端开发无法提供的话,我会通过抓包工具进行抓包,而后通过在线post工具生成接口文档在使用

Jmeter
1你们在工作中用jmeter来干嘛,jmeter版本号是多少
 用jmeter来做接口,压力测试,
2jmeter怎么汉化
 1 选项找到语言选择,选择中文简体,这个方法只能使用一次
 2在jmeter文件bin目录下找到jmeter系统配置文件,搜索语言设定将其改为中文
3jmeter安装目录下都有那些文件
bin目录下是可执行文件

jmeter.bat:windows的启动文件
jmeter.sh:linux的启动文件(linux启动jmeter)
jmeter.properties(pa bo ke si):系统配置文件
jmeter-server.bat:windows分布式测试的服务器配置
docs:是接口文档目录
Extras(ai ke si tan si):扩展插件目录
lib:所用到的插件目录,里面全是jar包,
Licenses(lai sen san si):jmeter证书目录
 	printable_docs(pu rui te bao):用户使用手册
4jmeter的工具组成部分
 资源生成器 用户运行器 报表生成器 负载发生器
5jmeter都有哪些线程组,他们的区别及联系是什么及执行顺序
SetUP线程组  teardown线程组  线程组
SetUP线程组 存放预测试操作线程
teardown线程组 存放测试后的操作线程
线程组  用于存放正在进行中的线程操作
SetUP线程组  teardown线程组都是执行一次,线程组可以重复执行
6jmeter线程组中都有哪些配置
遇到错误执行的动作:
 		继续:忽略错误，继续执行
启动下一进程循环，停止线程，停止测试，立即停止测试：这几个都是当遇到错误之后，就停止运行
线程数:就是用户数
时间:执行完线程的时间
循环次数:每个线程执行的次数
7jmeter怎么做接口测试
 公司下发了api文档,就根据api文档进行接口测试输入（协议，域名，请求，路径，内容编码，端口号）如果get请求需要带值得化就在参数里输入key值和value如果是form表单类型根据参数进行输入相应的值，如果是json格式的话在消息体填写数据，
如果没有api文档的情况下通过F12或者抓包工具获取之后在添加

8Jmeter怎么解决乱码
  添加一个后置处理器，bean shell processor 在里面设置编码格式为utf-8
第二个就是在jmeter文件bin目录下找到jmeter系统配置文件,搜索编码格式将其改为utf-8
9什么是重定向,自动重定向与跟随重定向的区别
重定向就是通过方法将网络请求重新定个方向转到其它位置,
自动重定向只有结果,跟踪重定向可以显示重定向的过程
10jmeter怎么对图片和文件接口测试
  上传图片或文件使用post类型然后勾选对post使用multipart(mao tai pa te) / from data 选择文件上传文件名称中填写文件所在目录的路径,参数名称填写:name的值 mime类型填写:文件的类型

11jmeter可执行八大元件及作用
配置原件是对静态数据进行配置支持
定时器是用于操作之间的等待时间设置,是控制吞吐量(qbs)的重要手段
前置处理器是对请求发送前进行特殊处理
后置处理器是对返回的响应数据进行处理,也可以提取响应结果
断言是判断得到的数据书否符合预期


监听器是对测试结果进行可视化展示
取样器是向服务器发送请求,并记录响应的信息
逻辑控制器有两种用法第一是控制子节点的运行逻辑顺序,第二是统计子节点数量和结果,
作用域是他的子节点
12jmeter的元件执行顺序及作用域
(1)配置元件(Config Element)
(2)前置处理器(Per Processors)
(3)定时器(Timer)
(4)取样器(Sampler)
(5)后置处理器(Post Processors)
(6)断言(Assertions)
(7)监听器(Listener)

元件作用域
取样器是不与其他的元件发生交互的,但必须放在线程组下
逻辑编辑器只对他的子节点起作用,
其他元件要与取样器等发生交互

13jmeter组件有哪些
取样器的http请求,
逻辑控制器的:事务控制器,循环控制器
前置处理器的:用户参数
断言的:响应断言,大小断言,断言持续时间
配置元件:http信息头管理,csv数据文件
监听器的:查看结果树,用列表查看结果,聚合报告
14断言的作用,你在jmeter中都用过那些断言
断言就是判断得到的数据是否符合预期
我在jmeter用到过响应断言,大小断言,断言持续时间

15断言的模糊匹配规则都有哪些
包括,匹配,相等,字符串
16参数化的作用及怎么用jmeter做参数化
参数化就是实现不同的人进行不同的操作,
如果模拟的人较少的时候,我会用用户参数化,首先增加一个线程组,然后按照需求在取样器里填写(协议,域名,端口号,请求类型,接口地址,编码格式),然后再线程里右键添加选择前置处理器,选择用户参数,线程内就会增加一个用户参数,进入用户参数点击添加变量(输入变量名,)点击添加用户就会增加一个用户这个数量需要几个就增加几个,输入用户参数,填好返回取样器里如果是from表单格式就在参数名称输入需求的变量名,值里输入${用户参数里对应的变量名},如果是json格式就在消息体里输入{“变量名”:”${csv里对应的变量名}”}输入完成,然后在线程组里输入线程数,线程数与用户数量一致,右键线程组添加里选择监听器,增加一个查看结果树,点击运行按钮就可以运行出对应的接口数据.

如果用户数量比较多的话我会选择csv数据文件进行参数化,首先是在创建txt文件里面填写需要参数,每个变量是一列,列与列之间用逗号隔开,在写好后保存,然后在jmeter里测试计划下增加一个线程组,然后按照需求在取样器里填写(协议,域名,端口号,请求类型,接口地址,编码格式),然后再线程组右键添加,元件配置里选择csv数据文件参数化,进入csv里选择文件浏览选择写好的txt文件,文件编码选utf-8,根据txt文件里有几个变量就输入几个变量名,变量名用逗号隔开,是否忽略首行选择true是忽略首行,false是执行首行,根据需要选择,填好返回取样器里如果是from表单格式就在参数名称输入需求的变量名,值里输入${用户参数里对应的变量名},如果是json格式就在消息体里输入{“变量名”:”${csv里对应的变量名}”}输入完成,然后在线程组里输入线程数,线程数与用户数量一致,右键线程组添加里选择监听器,增加一个查看结果树,点击运行按钮就可以运行出对应的接口数据.


17调试取样器的作用
当进行多参数的时候,可能会存在参数加密的情况,看不到参数我会使用调试取样器,对加密参数进行解密查看

18http请求默认值的作用
如果执行的请求有共同的参数,我会把相同的参数写到请求默认值里,这样就不用重复写相同的参数

19jmeter的集合点同步定时器的作用
在同一时间模拟多个用户同一时间同时运行

20jmeter怎么做并发测试，看那些指标
在jmeter里创建一个线程组输入线程数,在增加一个同步定时器输入模拟用户组的数量,和超时时间(如果为0的话就一直等待,输入时间以毫秒为单位,输入时间了就在等待时间结束后执行),再增加一个http请求输入参数,在增加聚合报告查看结果进行查看

21jmeter怎么生成html性能报告，报告里面都有啥
,(准备一个性能脚本,将脚本放入jmeter的bin目录下)
,然后再dos命令下进入到jmeter的bin目录下,输入jmeter -n -t 文件名.jmx -l jmeter日志 -e -o ./jmeter报告 (如果bin目录下有jmeter日志,jmeter日志,不能重复,bin目录下只能有一个不能重复),就会在bin目录下生成一个jmeter日志文件进入文件找到html格式的文件就是html报告了
报告里有:开始时间和结束时间,满意计数,容忍计数,通过率,异常率,聚合报告
22聚合报告里面都有哪些内容
Lable,样本,平均值,中位数,90%百分为,95%百分位,99%百分位,最小值,最大值,异常,吞吐量,接收,发送

23关联的作用及实质
作用:解决接口之间的业务逻辑和业务依赖
实质:下一个接口把上一个的响应结果做为参数使用

24正则表达式中（.+？）各代表什么意思
 ()含义：括起来的部分就是要提取的
.含义：匹配任何字符
+含义：一次或多次
?含义：在找到第一个匹配项后停止

26jmeter怎么做关联
Jmeter做关联有两种方法,正则表达式做关联和边界提取器做关联
首先在jmeter里创建一个线程组,在线程组里增加http请求输入参数添加结果树查看结果,正则表达式提取器输入引用名称,正则表达式从http1请求响应结果里复制要提取的值用(.+?)代替,模板输入$1$,匹配数字0代表随机1是第一个匹配的内容2是第二个以此类推,缺省值一般以null补充,在
http请求2输入参数,如果是from表单格式在参数里输入变量名称在值里用${变量名}进行引用,如果是josn格式在消息体数据里输入用${变量名}变量名进行引用,增加查看结果树进行查看结果
边界提取器的话是输入引用名称,左边界,右边界,匹配数字0代表随机,缺省值




27cookie管理器的作用
就是自动获取页面的cookie值,做安全识别操作

28jmeter怎么连接数据库
首先要导入一个连接数据库的驱动,然后添加一个jdbc的配置元件,在jdbc里输入自定义的连接名字连接数量,数据库地址(jdbc:mysql://主机ip:数据库端口号/库名),驱动选择第一个,数据库的账号和密码,
然后再增加一个jdbc的取样器,在里面输入自定义的连接名字,选择查询方式,输入sql语句,增加一个查看结果树查看结果


29jmeter怎么对数据库做参数化
首先要导入一个连接数据库的包,然后添加一个jdbc的配置元件,在jdbc里输入自定义的连接名字连接数量,数据库地址(jdbc:mysql://主机ip:数据库端口号/库名),驱动选择第一个,数据库的账号和密码,
然后再增加一个jdbc的取样器,在里面输入自定义的连接名字,选择查询方式,输入sql语句,加一个查看结果树查看结果根据结果输入对应结果的变量名,添加一个foreach控制器,输入需要数据的前缀和开始循环字段不包含的数字,结束循环字段包含数字,和输出变量名称(自定义)
添加一个http取样器输入参数,如果是from表单格式在参数里输入变量名称在值里用${foreach里的输出变量名}进行引用,如果是josn格式在消息体数据里输入用${}变量名进行引用,增加查看结果树进行查看结果

2也可以从数据库里将表以csv格式导出,在jmeter里增加一个线程组,增加一个csv数据文件设置进入选择导出的文件,选择文件编码,输入变量名称多个变量用逗号隔开,忽略首行选择true不忽略选择false,在添加一个http取样器输入参数如果是from表单格式在参数里输入变量名称在值里用${foreach里的输出变量名}进行引用,如果是josn格式在消息体数据里输入用${}变量名进行引用因为csv文件自带””在引用的时候不用加引  号,增加查看结果树进行查看结果

30jmeter怎么对数据库进行性能测试，看哪些指标
首先要导入一个连接数据库的包,
添加一个线程组输入用户数量
然后添加一个jdbc的配置元件,在jdbc里输入自定义的连接名字连接数量,数据库地址(jdbc:mysql://主机ip:数据库端口号/库名),驱动选择第一个,数据库的账号和密码,
然后再增加一个jdbc的取样器,在里面输入自定义的连接名字,选择查询方式,输入sql语句,
增加一个同步定时器输入模拟用户组数量
增加一个查看结果树查看结果对错
增加聚合函数查看聚合函数的:样本,平均数,异常率,吞吐量


31jmeter函数的种类及区别
自定义函数和内置函数
自定义函数是自己字参数化的设置,一般参数化用的比较多
内置函数允许写进任何非控制器测试组件的任何域。内置函数适用范围比自定义函数大

32jmeter里面你都用过那些内置函数
Random随机数
Randomdate随机时间
Randomstring随机字符串
Csvread 读取csv文件的参数
Counter统计
Time系统当前时间
Jex13,Groovy对函数进行包装






34jmeter分布式测试的作用，jmeter怎么做分布式
单台主机jmeter不能满足并发需求,分布式可以模拟更大的并发量
1.确保主机和代理机在同一个局域网内
2.改配置：1.rmi.ssl.disable=true（jmeter远程服务的开关）   
          2.把代理机的ip:端口号放到主机的配置文件中
3.启动代理机的jmeter.server.bat
4.准备一个性能脚本，点击运行（可以选择代理机运行，也可以运行所有（前提：主机的jmeter.server.bat也要启动）），代理机的服务器会返回开始和结束的标记
5.如果主机设置了1000个线程数，选择运行所有，代理机跑1000个请求，主机也跑1000个请求




35什么是内存泄漏，什么是内存溢出

定义变量没有使用
能用小的存储用了更大的存储方式(能用int用long存储)
New了对象或变量没有使用
申请的内存不够用就是内存溢出,内存泄漏后,堆积过多最终结果就是内存溢出


36Jmeter中你都用过那些逻辑控制器及作用
事务控制器:统计请求的响应时间
如果(if)控制器:根据表达式判断是否执行子节点(通常配合jex13,groovy函数使用)
循环控制器:指定子节点的循环次数
ForEach控制器:循环读取变量的值
交替循环控制器:交替执行循环子节点
仅一次控制器:让多次循环的请求只循环一次
随机控制器:随机循环一个子节点
随机顺序控制器:随机顺序循环子节点
Switch 控制器:根据值,指定子节点执行
While控制器:条件为空,判断字节点最后一个请求不报错一直循环
            当条件为true判断上一个请求是否正确,正确执行while控制器,不正确不执行
           条件为false的时候不执行while控制器


37线程组与循环次数的区别

线程数代表用户数，循环次数每个线程循环的次数
交替控制器 线程数不交替 交替循环次数
仅一次控制器  线程数一次  循环次数不一次（多个的用户，一个用户仅一次）

38Jmeter怎么做多接口测试
业务逻辑有依赖的我会用的关联
没有关联得用逻辑控制器


39随机控制器与随机顺序控制器的区别
随机控制器是随机执行一个子节点
随机顺序控制器是随机执行所有的子节点


40后端一般会返回那些信息

Code:后端返回前端的标识码
Message:后端返回给前端的提示文案信息
Data:后端把前端需要的数据返回




41jmeter怎么录制脚本（抓包）

在浏览器设置里的高级设置,系统,开启手动代理输入主机ip地址,和自定义一个端口号,在jmeter测试计划里添加一个非测试元件http代理服务器输入自定义的端口号,选择存放位置在http代理服务器,点击开启录制,录制完成点击结束,
录制完成后在测试计划,添加一个线程组,将录制里的请求复制到线程组内,添加一个查看结果树进行查看结果


Jenkins

1.jenkins的作用，什么是持续集成
持续集成工具:持续重复的工作
持续的软件版本发布及自动化测试,监控外部调用执行的工作.

2ant的作用
将软件的编译,测试,部署等步骤联系在一起加以自动化的一个工具,大多用于java开发

3jenkins+ant+jmeter怎么搭建的接口自动化性能平台，xml脚本里面包含那些信息
 在磁盘下新建一个目录，用jmeter录制或者手写一个jmx脚本，把这个脚本放到这个目录下
1.把jmeter下extras下的ant-jmeter-1.1.1.jar包放到ant目录下的lib目录下；将邮箱的3个jar包也放到ant目录下的lib目录下
2.把自己写的一个xml文件，放到ant目录下的bin目录下(导出报告的绝对路径,生成报告的名称,生成报告的路径,生成时间,邮箱账号和授权密码)
3.打开jenkins，在首页点击系统管理-插件管理-点击可安装的插件-输入change，去装一个更改程序及版本的插件，点击左下角安装
4.新建一个自由风格的一个项目，点击保存；点击构建选择使用ant-点击高级-把ant目录下的bin目录下xml文件的绝对路径放在构建文件里面--点击保存
5.构建这个项目
6.会在与xml文件指定的目录里生成一个测试报告，邮箱也会收到一个测试报告
7.查看样品数，平均响应时间，成功率，失败数



4怎么用jenkins进行发布
找到Jenkins相应的模块
找开发要分支名--找到这个分支名
选择相应的环境，点击开始构建，代码就更新了

Git pull  拉取云仓库代码
git branch <分支名> 创建分支
Git chaeckut master 切换到主干
Git merge 分支名 合并分支
Git push  推向云仓库


5怎么修改jenkins的端口号
修改Jenkins安装目录下的配置文件:jenkins.xml中的httpPort=8080改为httpPort=8081
然后重启Jenkins服务


6测试人员跟开发人员主要用jenkins来干什么
测试用来做自动化
开发用来上传分支,更新代码


8你怎么用jmeter做接口自动化
1做接口自动化我会搭配这逻辑控制器使用例如我会模拟一个用户进行登录,然后在交替控制器下选择商品,提交订单,取消订单,让他们进行交替运行
2用Jenkins+ant+jmeter这个框架去做


1你在工作中哪里涉及到了mq消息队列
Mq 消息队列,中间件
客户A发送请求在C里转换为响应发给服务器B
服务器B返回请求在C里转换响应发给客户A
请求在中介C里判断协议和请求格式是否正确
请求只接受webservers协议,xml请求格式
在用户与客服聊天的时候,不会直接与客服联系,我们会在客户与客服之间建立一个mq,mq的主要作用就是判断请求协议是否是webservers和请求格式是否是xml格式,客户发送的信息会到mq的请求里面,然后mq判断是否符合要求,符合就发给客服,不符合就不发送,客服返回的时候也是一样的流程

异步服务器
在支付的时候app发送支付请求到异步服务器,异步服务器到银行服务器,服务器返回信息到异步服务器,异步服务器返回给app


2http协议的特点
1支持客户/服务器的模式
1简单快速:客户端请求服务时只需要传送请求方法和路径,所以说http协议简单,有http服务器的程序规模小,所以速度快
3灵活:http允许任意类型的数据对象,
4无连接:每次连接只处理一个请求,处理完毕就断开
5五状态:http没有记忆能力


3长连接与短连接的区别

长连接：长链接连接后不会断开,可以多次发送请求
短连接：请求完毕后立即断开连接。
长连接与短连接的使用时机：
短连接多用于操作频繁，而且长连接数不能太多的情况。




charles

1.charles怎么设置弱网
点击小乌龟进行设置

2.charles怎么设置断点（请求前，响应后）
在proxy(代理)里点击breakpoint setting(断点设置)点击add，在host内添加需要断点的域名
选择断点方式请求前或者响应后


3charles怎么抓https请求
先在help里选择ssl代理,下载ca证书,再在代理里选择ssl代理设置里增加ca证书,在ssl代理设置中增加域名就可以



4.charles怎么设置过滤
1在会话框下方filter输入框输入要过滤的域名进行过滤
2在代理里选择Recording Settings(记录设置)选择策略,添加策略进行过滤


5.charles怎么做接口及并发

点击笔进行修改请求信息,点击箭头重新发送这个请求可以做微量的并发

6.charles工作原理，出现unknown怎么处理
代理服务器,
当出现unknown,我会在代理设置里进行设置策略进行处理


7Charles怎么抓取app的包
确保手机和charles在同一网络内
在Charles里帮助选择允许远程操作查查看本地ip地址和端口号,获取手机下载Charles证书下载地址
在手机WiFi里设置手动代理网络输入主机ip,和Charles的端口号,设置成功后Charles弹出是否允许远程操作,点击是,
然后在手机端输入chls.pro/ssl下载证书,安卓下载完成就可以了,iOS下载完毕后在关于手机里选择信任证书
如果出现unknown将抓取到请求的域名放在策略设置里进行设置就可以正常抓取了




8Charles和fiddler的区别

弱网不同,Charles只能模拟弱网测试不能进行网速设置,fiddler可以设置网速
断点不同:Charles设置断点需要先在代理里进行断点的域名进行设置断点,fiddler可以不需要设置断点地址,直接打开可以对所有请求进行断点
抓手机端的包(连接代理的顺序):Charles抓手机端的包是先设置代理,在下载证书,fiddler则是先要打开允许远程操作,在下载证书,设置代理

安装不同(手机下载地址)






性能

1.什么是性能测试（广义）
 基于协议模拟用户发出请求,对服务器进行一定的负载,来测试服务器的性能指标是否满足要求

2.性能测试什么时候介入

性能测试在功能测试和接口测试执行完毕后,进行性能测试

3你们公司服务器都有哪些配置
我们公司服务器的规格类型有：2核4g，4核8g，8核16g，16核32g，
数据库用的是8核16g的服务器

3.性能测试分类
性能测试(狭义):在特定的环境下,去验证是否满足他宣称的问题
负载测试:对一个系统持续不断的加压，直到系统崩溃,找到最大的并发量
压力测试:在一个很大的压力强度下,并且运行一段时间,看系统是否稳定
并发测试:模拟用户同时去访问某一个系统或操作,看是否存在并发访问问题(每个用户只运行一次)
配置测试:调整软硬件环境,使系统达到一个最佳状态,一般用于系统调优
可靠性测试:在一定的压力量下,运行较长时间(一般2-3天)看系统是否稳定


4.负载跟压力的区别；压力跟并发的区别；压力跟可靠性区别
压力与负载的区别:
压力是很大强度持续施压
负载是不断的施压,强度不大
压力与并发的区别
  同样的强度下并发只运行一次,压力需要持续运行
压力跟可靠的区别
  同等强度下,压力运行时间较短,可靠性运行时间较长


6.在做性能测试时，你都对比哪些指标
   响应时间,吞吐量,资源利用率,带宽利用率
响应时间:2,5,8秒
Tps每秒处理的事务数   qps每秒处理请求数
资源利用率:CPU  70-80%  mem 80%以下
带宽利用率：100Mbps=12.5MB/s（1Byte=8bit）只利用到网速的八分之一
并发数:并发用户数   并发请求数
磁盘:磁盘的读写速度不能过快
7性能测试流程，性能测试报告中的各项指标未能达到预期，可能存在哪些瓶颈
1需求分析
  1)测试对象:常用的,核心的,重要的(如登录,注册,搜索,添加购物车,下单,支付)
  数据量大,并发量大的(多人同时查询,节日促销)
2)确定性能指标
   吞吐量,tps:服务器每秒处理请求数量
   响应时间
   用户数
   资源利用率:cpu,mem,磁盘io(磁盘的输入与输出)网络
吞吐量=并发用户数除响应时间
八二原则:80%的用户利用20%的时间去访问
不利用八二原则就用平均负载乘以4

3)测试环境
  单一场景:多人一个功能
  混合场景:多人/一人  多功能
         i用户场景:注册-->登录-->下单-->支付
         ii系统使用场景:把不同的请求发送到,服务器,服务器进行处理
2测试计划
  测试目标,测试人员组织(选择测试人员进行性能测试),压测进度安排,压力机(配置,要求,数量),风险
3测试方案
   测试工具,测试环境,测试策略,监控工具
4性能测试用例
设计基于脚本的用例
5测试执行
脚本编写,场景监控设计,运行场景,监控场景,测试报告(聚合报告的各项指标,linux-nomn工具监控的硬件指标)
6定位分析问题
   性能瓶颈你会考虑那些原因
后端:代码(逻辑(排序),算法错误(分页),内存泄漏,内存溢出),数据库(数据库锁死,未加索引,索引未生效),应用服务器(服务器异常)
前端:服务器返回信息,页面渲染比较慢
网络:网络带宽较低或中断网络
硬件:cpu利用率大于80%,可用内存较少,内存利用率不能超过80%


我们公司的性能测试流程是,
1需求分析:明确测试目标,确定性能指标,确定测试场景
2制定测试计划:测试目标,人员及进度的安排,压力机的数量及配置,风险评估
3制定测试方案:测试工具,测试环境,测试策略,监控工具,
4编写脚本用例:
5执行计划:执行用例,场景监控,运行场景(并发量大的化用分布式),输出测试报告(聚合报告里的各项指标,及linux-nomn工具监控的硬件指标)
6去定位分析性能瓶颈(后端,前端,网络,硬件)


1.性能测试过程中，吞吐量上不去（吞吐量比较低），可能有哪些原因导致
1压力机本身的瓶颈
2网络原因(上传与下载的速度)
3中间件(tomxat,nginx,musql,radis,mq)连接限制
4java线程的阻塞,等待
5本地系统资源瓶颈(cpu,内存,磁盘,网络等)
6其他外部系统响应时间过长,造成本系统的time-wait


2.并发访问问题怎么解决（搭配自己项目说），悲观锁原理和乐观锁原理

并发问题我们可以通过,给数据加锁来解决,比如在抢购的时候只剩下最后一件商品的时候,很多人同时抢购,可能会造成数据库锁死,这个时候我们可以给数据库加上一个悲观锁,这样数据库就会锁定第一条数据进行处理,在第一条数据处理完毕后才会处理第二条,这样的话就只有第一个用户能抢到商品,在处理第二个用户请求的时候库存为0会给用户返回已售空的提示

乐观锁处理并发问题的时候就是在数据库里设置一个version,在用户请求的时候也会带一个值,用户与数据库的值相同,数据库的值就会更新,在之后访问的用户再带原来的值来匹配的话就会被返回异常


悲观锁:将提交的第一条数据进行锁定,处理完成之后,再处理第二条
乐观锁:就是在数据库中先设置一个值一般是(Version),再根据这个值去判断请求上传的值是否与version是否一致,一致的话请求就操作成功,如果请求的值与服务的值不一致就会返回异常,如果库存的数为0后服务器值就会发生改变,请求就不成功




3什么是线程,什么是进程,线程以进程的区别
进程:正在打开应用程序
线程:应用程序的功能,依托与进程存在

区别
进程有自己的独立空间方便管理
线程没有自己的独立空间不方便管理,容易发生资源争抢
以进程模拟的虚拟用户少,会造成资源浪费
以线程模拟的用户多,节省资源


1.怎么做负载测试，目的是什么
1.在jmeter lib/ext目录下导入pelguns-manger插件
2.点击选项-pelguns-manger去安装jpgc插件
3.添加一个jpgc线程组（用户数，每秒启动多少 个用户，持续运行一段时间，每秒停止多少个用户）
4.添加一个你要测试的接口
5.添加聚合报告，添加三张图表（用户运行图， 平均响应时间图表，吞吐量图表）主要看平均响应时间图和吞吐量是否在一条水平线上
目的：得出系统崩溃时刻，那个点最大并发量（1.找到崩溃的那个对应的聚合报告里面样本数-并发请求数2.找到崩溃点对应的时间，再根据这个时间在用户运行图里面找到的用户数-并发用户数）



2.怎么做压力测试，看那些指标
1.在jmeter lib/ext目录下导入pelguns-manger 插件
2.点击选项-pelguns-manger去安装jpgc插件
3.添加一个jpgc线程组（用户数，持续运行一段 时间）
4.添加一个你要测试的接口
5.添加聚合报告，添加三张图表（用户运行图， 平均响应时间图表，吞吐量图表）
6.查看平均响应时间，吞吐量，异常（0.5%），cpu，内存，磁盘io，网络 是否满足需求


3导出Csv测试报告
首先创建一个csv的文件,在jmeter的聚合报告里选择浏览找到创建的csv文件选择,执行压力测试脚本,就会将数据导入到csv文件内
主要查看接口名称,响应描述原因,是否成功,失败原因,接口地址



4当没有需求文档,也没有明确指标,你怎么设计场景(你怎么判断你的指标)
  1首先做负载-找到最大并发量-再去做压测
2根据同行业的相关接口性能指标去判断
3与开发和产品去沟通,看指标是否满足
4凭借自己的经验,吞吐量越大越好,平均响应时间越小越好


5并发数,tps,平均响应时间的关系
Tps=并发数/平均响应时间
刚开始性能比较好平均响应时间和发数步稳定增加,tps增加
上升到一定数量后平稳运行平均响应时间和并发数趋于稳定,tps稳定
当达到瓶颈时平均响应时间成 增加,并发不变,tps下降


6你在项目中哪里做的压力测试,模拟的并发量多少,达到的平均响应时间与吞吐量是多少
项目中压力及指标
并发数(压力量) 800   两个小时之内
外网: 平均响应时间 1,1s    吞吐量  600qps/s
内网:平均响应时间 0.2s     吞吐量 1200qps/s




7.怎么判断系统已经崩溃

1异常在不断的增加超过0.5%
2平均响应时间图表在某一时刻增长的非常快
3事务吞吐量图表在某一时刻有失败的请求产生(在某一时刻吞吐量下降的特别明显)








Adb命令



显示系统中全部设备：adb devices
开启ADB服务：adb start-server
关闭ADB服务：adb kill-server
安装adb install -r (APK路径)

获取包名adb shell dumpsys window | findstr "usedApp"
adb uninstall （app包名）卸载app
列出所有app的包名：adb shell pm list packages

列出所有系统应用包名：adb shell pm list packages -s
清除应用数据与缓存：adb shell pm clear （apk包名）
电脑--手机adb push 文件路径 sdcard/要push的路径
我`	aCV1`		`db logcat | find “关键字”

查询某一时刻的日志
adb logcat 时间（时间格式为2020-09-22 09:30:53）
查看手机的分辨率（可以在你的设置-关于手机里面查看）adb shell wm size
adb version查看adb版本
查看设备型号adb shell getprop ro.product.model

查看 Android 系统版本adb shell getprop ro.build.version.release
查看屏幕密度adb shell wm density
查看cpu使用情况adb shell dumpsys cpuinfo
adb shell dumpsys meminfo -PID号 ---查看进程内存使用情况
查看当前进程的信息(监控相关资源)adb shell ps
查看指定的程序的cpu: adb shell dumpsys cpuinfo | find “包名”






查看APP日志的方式

1通过adb命令:adb logcat | find
2数据库的日志表查看
3通过调取服务端:tail -f 查看
4前端开发在app里面集成为一个vconsole工具可以查看日志







公众号唯一身份标识:union id  关注公众号后产生(同步微信的所有信息)
                  Open id   注册之后产生
(一个公众号对应一个open id和union id,如果这个公众号是个子公众号union id不变)





H5是基于浏览器打开的页面(小程序)
1断网后可以显示原生页面,显示404是h5
2布局页面(分割线较多),没有是h5
	3没有复制是原生,h5可以进行粘贴复制
	4有进度条的是h5没有的是原生
	5顶部右上角有关闭是h5,没有是原生
	6下拉页面自动刷新是h5,不自动刷新的是原生
	7下拉显示网页提供商是h5,不提示是原生













20、项目中遇到的风险有哪些？
1.上线风险（无法按时上线）
2.漏测风险（用例没有覆盖全面）
3.配置数据存在风险（上线之前需要对数据进行初始化）
4.偶现bug未解决
5.分支（代码）发错了环境




19、开发每次提测过来都是有很多bug，这个问题怎么解决
1.早上晨会向经理反馈这个提测情况
2.让测试经理与开发经理去协助沟通
    3.可以提个小意见，让开发在提测之前，自己先进行冒烟，冒烟没问题的话，再给测试，这样节省了很多测试时间





Syn同源序列编号   ack确认包

Fin断开连接指令
四次挥手(断开连接)
客户端发送 fin 到服务器  服务器返回ack到客户端 服务再发送一个fin 到客户端
客户端把 ack 发送给服务器




4：web端测试和app端测试的区别？
1：web端软件是基于b/s架构，app端软件是基于c/s架构的
2:web端不需要进行下载，app端需要对下载和卸载进行测试
3:web端在更新时，只需要刷新浏览器即可，app需要重新下载。
4:web端测试的兼容性是基于不同浏览器之间的兼容，比如谷歌，火狐和IE
app端的测试是基于不同的操作系统，比如安卓，ios以及鸿蒙系统，以及不同手机品牌之间的兼容性

5:app端还需要进行相关的手机专项测试，比如弱网弱电测试，我们在测试app时，将网络切换至
3G网络，2G网络看软件是否能正常运行，弱电情况下，软件是否能正常操作以及中断测试，比如在使用这个app时，有电话打进来，或者语音，视频等，是否会影响到app的
正常使用
以及横屏竖屏测试
也包括内存测试，使用软件时，手机内存占用情况是否会过高
以及耗电量测试和流量测试
以及对手机分辨率的测试
6:在操纵方式上来将，web一般使用鼠标进行操作
app端一般使用触屏，拖拽和手势测试。



测试的流程
Ui界面布局
功能性
安全性
性能
易用性
App专项测试(弱电,弱网,干扰测试,权限测试
兼容性测试(web主要是不同的浏览器,pc是操作系统,app是不同的系统)





